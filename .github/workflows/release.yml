name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Changes in this Release
            
            ### Features
            - New fuel delivery features
            - Enhanced user experience
            - Performance improvements
            
            ### Bug Fixes
            - Various bug fixes and stability improvements
            
            ### Download
            - [Android APK](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/app-release.apk)
            - iOS: Available on the App Store

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

  build-android:
    name: Build Android Release
    runs-on: ubuntu-latest
    needs: [test, create-release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Decode Android keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 -d > android/app/release.keystore

      - name: Create gradle.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=$KEYSTORE_PASSWORD" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=$KEY_PASSWORD" >> android/gradle.properties

      - name: Build Android Release APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Build Android App Bundle
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/release/app-release.apk
          asset_name: fuelflow-${{ needs.create-release.outputs.version }}-android.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: android/app/build/outputs/bundle/release/app-release.aab
          asset_name: fuelflow-${{ needs.create-release.outputs.version }}-android.aab
          asset_content_type: application/octet-stream

  build-ios:
    name: Build iOS Release
    runs-on: macos-latest
    needs: [test, create-release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_PASSWORD }}

      - name: Install Provisioning Profile
        uses: Apple-Actions/download-provisioning-profiles@v2
        with:
          bundle-id: com.fuelflow.app
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}

      - name: Build iOS Archive
        run: |
          cd ios
          xcodebuild -workspace FuelFlow.xcworkspace \
            -scheme FuelFlow \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath FuelFlow.xcarchive \
            archive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath FuelFlow.xcarchive \
            -exportPath ./build \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload IPA to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ios/build/FuelFlow.ipa
          asset_name: fuelflow-${{ needs.create-release.outputs.version }}-ios.ipa
          asset_content_type: application/octet-stream

  deploy-to-stores:
    name: Deploy to App Stores
    runs-on: macos-latest
    needs: [build-android, build-ios, create-release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android AAB
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: ./android-release

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: ./ios-release

      - name: Deploy to Google Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.fuelflow.app
          releaseFiles: ./android-release/app-release.aab
          track: production
          status: completed

      - name: Deploy to App Store Connect
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ./ios-release/FuelFlow.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-to-stores]

    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#releases'
          text: |
            ðŸš€ FuelFlow ${{ needs.create-release.outputs.version }} has been released!
            
            âœ… Android: Deployed to Google Play Store
            âœ… iOS: Deployed to App Store Connect
            
            Release Notes: https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-release.outputs.version }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}